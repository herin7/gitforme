{
  "swagger": "2.0",
  "info": {
    "title": "~GitForMe, Understand any GitHub repository in minutes, not days.",
    "description": "Automatically generated API documentation  ~GitForMe",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/auth/github": {
      "get": {
        "description": "Redirects the user to GitHub for OAuth authentication.",
        "responses": {
          "302": {
            "description": "Redirect to GitHub OAuth"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "description": "Handles the callback from GitHub after OAuth authentication.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string",
            "description": "Authorization code returned by GitHub"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to Home after Login"
          },
          "400": {
            "description": "No authorization code received."
          },
          "500": {
            "description": "Could not retrieve access token."
          }
        }
      }
    },
    "/auth/verifyUser": {
      "post": {
        "description": "Verifies the user token for the frontend.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User token to verify",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User verified"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "description": "Clears the user token & logs out the user.",
        "responses": {
          "200": {
            "description": "Logged out Successfully."
          },
          "500": {
            "description": "Logout failed."
          }
        }
      }
    },
    "/stats/user-count": {
      "get": {
        "description": "Returns the total number of users.",
        "responses": {
          "200": {
            "description": "User count retrieved"
          },
          "500": {
            "description": "Error fetching user count."
          }
        }
      }
    },
    "/github/repos/{username}/{reponame}/file/{path}": {
      "get": {
        "description": "Returns the content of a file in the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "File path in the repository"
          }
        ],
        "responses": {
          "200": {
            "description": "File content retrieved"
          },
          "500": {
            "description": "Failed to fetch file content."
          }
        }
      }
    },
    "/github/{username}/{reponame}/issues/{issue_number}/timeline": {
      "get": {
        "description": "Returns the timeline of a specific issue in the repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          },
          {
            "name": "issue_number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Issue number"
          }
        ],
        "responses": {
          "200": {
            "description": "Issue timeline retrieved"
          },
          "500": {
            "description": "Error fetching issue timeline from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/insights/dependencies": {
      "get": {
        "description": "Returns dependency health insights for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Dependency health insights retrieved"
          },
          "500": {
            "description": "Error fetching dependency health."
          }
        }
      }
    },
    "/github/{username}/{reponame}": {
      "get": {
        "description": "Returns details of the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Repository details retrieved"
          },
          "500": {
            "description": "Error fetching repository data from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/readme": {
      "get": {
        "description": "Returns the README file of the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Repository README retrieved"
          },
          "500": {
            "description": "Error fetching README from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/commits": {
      "get": {
        "description": "Returns the commit history for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          },
          {
            "name": "path",
            "in": "query",
            "type": "string",
            "description": "File path (optional, for file-specific commits)"
          }
        ],
        "responses": {
          "200": {
            "description": "File commits retrieved"
          },
          "400": {
            "description": "A file path query parameter is required."
          },
          "500": {
            "description": "Error fetching file commit history from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/deployments": {
      "get": {
        "description": "Returns deployment information for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Deployments retrieved"
          },
          "500": {
            "description": "Error fetching deployments from GitHub."
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/github/{username}/{reponame}/git/trees/{branch}": {
      "get": {
        "description": "Returns the git tree for the specified branch in the repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Branch name"
          }
        ],
        "responses": {
          "200": {
            "description": "Git tree retrieved"
          },
          "500": {
            "description": "Error fetching Git tree from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/contributors": {
      "get": {
        "description": "Returns the list of contributors for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Contributors retrieved"
          },
          "500": {
            "description": "Error fetching contributors from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/issues": {
      "get": {
        "description": "Returns the list of issues for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Issues retrieved"
          },
          "500": {
            "description": "Error fetching issues from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/pulls": {
      "get": {
        "description": "Returns the list of pull requests for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Pull requests retrieved"
          },
          "500": {
            "description": "Error fetching pull requests."
          }
        }
      }
    },
    "/github/{username}/{reponame}/good-first-issues": {
      "get": {
        "description": "Returns the list of good first issues for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Good first issues retrieved"
          },
          "500": {
            "description": "Error fetching good first issues from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/hotspots": {
      "get": {
        "description": "Returns code hotspots for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Code hotspots retrieved"
          },
          "500": {
            "description": "Error fetching code hotspots from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/timeline": {
      "get": {
        "description": "Returns the timeline of the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Repository timeline retrieved"
          },
          "500": {
            "description": "Failed to fetch repository timeline data from GitHub."
          }
        }
      }
    },
    "/github/{username}/{reponame}/insights": {
      "get": {
        "description": "Returns insights for the specified repository.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "GitHub username"
          },
          {
            "name": "reponame",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Repository name"
          }
        ],
        "responses": {
          "200": {
            "description": "Repository insights retrieved"
          },
          "500": {
            "description": "Error fetching pull request insights from GitHub."
          }
        }
      }
    }
  }
}